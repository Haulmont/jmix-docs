####################################################################################################
##
## Jmix Generic REST API
##
####################################################################################################


## Execute 'authenticate.http' first to get have a valid access token for the API

## Get all User entities

GET {{baseUrl}}/{{genericApi}}/entities/sample_User
Authorization: Bearer {{auth_token}}

> {%

    client.test("Response Code is 200", function() {
      client.assert(
          response.status === 200,
          "Response status is not 200 - OK"
      );
    });

    client.test("Entity List can be retrieved", function() {
      client.assert(
          response.body.length > 0,
          "Entity List does not contain multiple items"
      );
      client.assert(
          response.body[0]["_entityName"] === "sample_User",
          "Entity List does not contain users"
      );
      client.assert(
          response.body[0]["id"],
          "ID Attribute of an Entity is not returned"
      );
    });
  %}

###


## Search for User by username

POST {{baseUrl}}/{{genericApi}}/entities/sample_User/search
Authorization: Bearer {{auth_token}}

{
  "filter": {
    "conditions": [
      {
        "property": "username",
        "operator": "=",
        "value": "admin"
      }
    ]
  }
}

> {%

    client.test("Response Code is 200", function() {
      client.assert(
          response.status === 200,
          "Response status is not 200 - OK"
      );
    });

    client.test("admin is found in the entity list", function() {
      client.assert(
          response.body[0]["username"] === "admin",
          "username attribute of the first result is not admin"
      );

    });

  %}


