## Execute 'authenticate.http' first to get have a valid access token for the API

# Upload a file with content type: multipart/form-data

POST http://localhost:8080/rest/files
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{access_token}}

--WebAppBoundary
Content-Disposition: form-data; name="file"; filename="cat.jpg"
Content-Type: image/jpeg

< ./cat.jpg
--WebAppBoundary--

> {%
    client.test("Response Code is 201", function() {
      client.assert(
          response.status === 201,
          "Response status is not 201 - Created"
      );
    });

    client.test("new Entities are returned", function() {
      client.assert(
          response.body["name"] === "cat.jpg",
          "The file was not stored unter cat.jpg"
      );
    });

    client.global.set("fileReferenceId", response.body["fileReference"])
  %}

###

# Upload a file with different content type

POST http://localhost:8080/rest/files?name=cat-via-direct-content-type.jpg
Content-Type: image/jpeg
Authorization: Bearer {{access_token}}

< ./cat.jpg

> {%
    client.test("Response Code is 201", function() {
      client.assert(
          response.status === 201,
          "Response status is not 201 - Created"
      );
    });

    client.test("new Entities are returned", function() {
      client.assert(
          response.body["name"] === "cat-via-direct-content-type.jpg",
          "The file was not stored under cat-via-direct-content-type.jpg"
      );
    });

    client.global.set("fileReferenceId", response.body["fileReference"])
  %}

###

# Upload a file with different content type but without filename

POST http://localhost:8080/rest/files
Content-Type: image/jpeg
Authorization: Bearer {{access_token}}

< ./cat.jpg

> {%
    client.test("Response Code is 201", function() {
      client.assert(
          response.status === 201,
          "Response status is not 201 - Created"
      );
    });

    client.test("new Entities are returned", function() {
      client.assert(
          response.body["name"] === "cat-via-direct-content-type.jpg",
          "The file was not stored under cat-via-direct-content-type.jpg"
      );
    });

    client.global.set("fileReferenceId", response.body["fileReference"])
  %}
